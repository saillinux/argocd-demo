apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeInstanceGroupManager
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-instance-group"
spec:
  projectRef:
    external: "projects/{{ .Values.project.id }}"
  location: {{ .Values.instance.region }}
  namedPorts:
  - name: http
    port: 80
  autoHealingPolicies:
    - healthCheckRef:
        name: "{{ .Values.project.id }}-{{ .Release.Name }}-healthcheck"
      initialDelaySec: 300
  targetSize: {{ .Values.instance.targetSize }}
  instanceTemplateRef:
    name: "{{ .Values.project.id }}-{{ .Release.Name }}-instance-template-{{ .Values.version }}"
  updatePolicy:
    instanceRedistributionType: PROACTIVE
    minimalAction: REPLACE
    maxSurge:
      fixed: {{ .Values.instance.targetSize }}
    maxUnavailable:
      fixed: 1
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeHealthCheck
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-healthcheck"
spec:
  httpHealthCheck:
    port: 80
  location: global
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeInstanceTemplate
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-instance-template-{{ .Values.version }}"
spec:
  tags:
    - http-server
    - https-server
  region: {{ .Values.instance.region }}
  machineType: {{ .Values.instance.machineType }}
  metadataStartupScript: |
    sudo apt update
    sudo apt install apache2 -y
  disk:
  - sourceImageRef:
      external: {{ .Values.instance.image }}
    boot: true
  networkInterface:
  - networkRef:
      external: default
    subnetworkProject: {{ .Values.project.id }}
    subnetworkRef:
      external: default
