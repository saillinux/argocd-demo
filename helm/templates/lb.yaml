apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeForwardingRule
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-forwarding-rule"
spec:
  description: "A global forwarding rule"
  target:
    targetHTTPProxyRef:
      name: "{{ .Values.project.id }}-{{ .Release.Name }}-target-http-proxy"
  portRange: "80"
  ipProtocol: "TCP"
  ipVersion: "IPV4"
  location: global
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeTargetHTTPProxy
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-target-http-proxy"
spec:
  urlMapRef:
    name: "{{ .Values.project.id }}-{{ .Release.Name }}-urlmap"
  location: global
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeURLMap
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-urlmap"
spec:
  defaultService:
    backendServiceRef:
      name: "{{ .Values.project.id }}-{{ .Release.Name }}-backend-service"
  location: global
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeBackendService
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: {{ .Values.project.id }}
    cnrm.cloud.google.com/force-destroy: "{{ .Values.destroy }}"
  labels:
    environment: {{ .Values.env.name }}
    owner: {{ .Values.owner }}
    team: {{ .Values.team }}
  name: "{{ .Values.project.id }}-{{ .Release.Name }}-backend-service"
spec:
  portName: http
  timeoutSec: 30
  healthChecks:
  - healthCheckRef:
      name: "{{ .Values.project.id }}-{{ .Release.Name }}-healthcheck"
  loadBalancingScheme: EXTERNAL
  location: {{ .Values.instance.region }}
  protocol: HTTP
  logConfig:
    enable: false
  backend:
  - balancingMode: RATE
    description: An instance group serving this backend.
    group:
      instanceGroupRef:
        external: "{{ .Values.project.id }}-{{ .Release.Name }}-instance-group"
